How to Use 3-say_my_name.py
===========================

This modules define a function "say_my_name(first_name, last_name="")"

Usage
=====

"say_my_name(...)" prints "My name is <first_name> <last_name>".

::

  >>> say_my_name = __import__('3-say_my_name').say_my_name
  >>> say_my_name("Betty", "Patrick")
  My name is Betty Patrick

::

  >>> say_my_name("Betty Rose", "Patrick")
  My name is Betty Rose Patrick

::

The parameter "last_name" is optional. If no last name is provided, an empty 
string is is printed instead.

::

  >>> say_my_name("Betty")
  My name is Betty

Invalid Names
=============

The parameters "first_name" and "last_name" must be strings. Otherwise, a TypeError is raised.

::
 
  >>> say_my_name(5, "Betty")
  Traceback (most recent call last):
  TypeError: first_name must be a string

::

  >>> say_my_name("Ruto", ["Gachagua", "Weta", "Kenya kwanza"])
  Traceback (most recent call last):
  TypeError: last_name must be a string

::

  >>> say_my_name({"Ruto": 1, "Gachagua": 2}, 2022)
  Traceback (most recent call last):
  TypeError: first_name must be a string

::

  >>> say_my_name(None)
  Traceback (most recent call last):
  TypeError: first_name must be a string

At least one name must be provided.

::

  >>> say_my_name()
  Traceback (most recent call last):
  TypeError: say_my_name() missing 1 required positional argument: 'first_name'
